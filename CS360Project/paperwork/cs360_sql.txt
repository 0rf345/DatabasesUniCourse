--Purchase, if customer has enough credit limit then purchase is succesful and is stored
--Purchase done by individuaL
-- ??????????
INSERT INTO individual_transaction (trsctid, indiv_accid, merch_accid, trsctdate, amount, ischarge) VALUES (@trsctid, @indiv_accid, @merch_accid, CURDATE(), @amount, true) 
WHERE (SELECT * FROM individual
	WHERE accid = @accid AND availcredit - @amount > 0
)

UPDATE merchant
SET profit = profit + @amount, currdebt = currdebt - comission * @amount
WHERE accid = @accid;


--Return by Individual
--Set isCharge to false, update Credit limit for individual
--Update Profit and Current Debt for merchant
UPDATE individual
SET creditlmt = creditlmt + @amount
WHERE accid = @accid;

UPDATE individual_transaction
SET isCharge = false
WHERE indiv_accid = @accid;

UPDATE merchant
SET profit = profit - @amount, currdebt = currdebt + comission * @amount
WHERE accid = @accid;


--Return by Company
UPDATE company
SET creditlmt = creditlmt + @amount
WHERE accid = @accid;

UPDATE company_transaction
SET isCharge = false
WHERE company_accid = @accid;

UPDATE merchant
SET profit = profit - @amount, currdebt = currdebt + comission * @amount
WHERE accid = @accid;


--Payment by costumer or merchant, paying off debt
UPDATE individual
SET currdebt = currdebt - @payment
WHERE accid = @accid AS i AND i.currdebt - @payment > 0

UPDATE company
SET currdebt = currdebt - @payment
WHERE accid = @accid AS c AND c.currdebt - @payment > 0

UPDATE merchant
SET currdebt = currdebt - @payment
WHERE accid = @accid AS m AND m.currdebt - @payment > 0


--Customer or merchant can ask for transactions done at a specific chronological period
--So if it's a customer we need to search at both invidual and company table to find them
--If it's a merchant we need to look at both individual and company table for all it's transactions

--Search Transactions By Date

SELECT * FROM (
	SELECT trsctid, trsctdate, amount, ischarge
	FROM individual_transaction
	UNION
	SELECT trsctid, trsctdate, amount, ischarge
	FROM company_transaction
) AS U
WHERE @idtype = @id AND trsctdate BETWEEN '@fromdate'  AND '@todate' ORDER BY date DESC;

--Depending on who does the search (company, individual or merchant) @idtype is different and has to respond to that, @id refers to the id of the person making the search




--Show good clients, all clients that don't have any debt towards CCC
SELECT * FROM (
	SELECT * FROM individual
	UNION
	SELECT * FROM company
	UNION
	SELECT * FROM merchant
) AS U
WHERE currdebt = 0

--Show bad clients
SELECT * FROM (
	SELECT * FROM individual
	UNION
	SELECT * FROM company
	UNION
	SELECT * FROM merchant
) AS U
WHERE currdebt > 0
ORDER BY currdebt ASC;

--GAAAAHHHH
--Merchant of the month with most sales, decrease amount they own by 5%
--If ischarge is true then transaction was a buy and not a return
--ischarge is false then transaction was a return

UPDATE merchant
SET currdebt = currdebt - (5/100)*currdebt
WHERE
	SELECT accid
	FROM 
		(SELECT merch_accid, 
			COUNT(merch_accid) AS merchant_sales
		FROM (
			SELECT *
			FROM individual_transaction
			UNION
			SELECT *
			FROM company_transaction
			WHERE MONTH(trsctdate) = MONTH(CURDATE())
				AND YEAR(trsctdate) = YEAR(CURDATE())
				AND ischarge = true
			GROUP BY merch_accid	
			) merchant_sales_accid
	WHERE merchant_sales_accidaccid = MAX(merchant_sales).accid




--select * from merchants m, (
	select mrname, max(tottrans) as maxtrans 
	from 
		(select mrname, count(mrname) as tottrans 
		from transacts 
		where
		clname='' and book<>'--balance--' and book<>'--
		manual-balance--' and book<>'--return--' and
		book<>'--best-reward--' and
		month(date)=month(now())
		group by mrname)
		tmp1) tmp2
	where m.name = tmp2.mrname
	
